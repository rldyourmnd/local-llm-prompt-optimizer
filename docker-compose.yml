version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: llm-optimizer-db
    environment:
      POSTGRES_DB: optimizer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - llm-network

  redis:
    image: redis:7-alpine
    container_name: llm-optimizer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - llm-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: llm-optimizer-backend
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/optimizer
      - REDIS_URL=redis://redis:6379/0
      - LM_STUDIO_BASE_URL=${LM_STUDIO_BASE_URL:-http://host.docker.internal:1234/v1}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - llm-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  telegram-bot:
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile
    container_name: llm-optimizer-bot
    env_file:
      - .env
    environment:
      - LM_STUDIO_BASE_URL=${LM_STUDIO_BASE_URL:-http://host.docker.internal:1234/v1}
    depends_on:
      - backend
    networks:
      - llm-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - with-bot

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.simple
    container_name: llm-optimizer-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - llm-network

networks:
  llm-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
